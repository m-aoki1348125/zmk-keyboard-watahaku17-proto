#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <0 15 27>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <19 40 20>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <7 40 8>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <39 13 12>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <25 24 39>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <23 24 39>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <11 12 39>;
        };

        ctl_f {
            bindings = <&kp LC(F)>;
            key-positions = <18 19 40>;
        };

        ctl_shift_f {
            bindings = <&kp LC(LS(F))>;
            key-positions = <6 7 40>;
        };

        ctl_z {
            bindings = <&kp LC(Z)>;
            key-positions = <30 31 40>;
        };

        ctl_y {
            bindings = <&kp LC(Y)>;
            key-positions = <31 32 40>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <2 3 39>;
        };

        win_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <1 2 39>;
        };
    };

    // Auto mouse layer configuration

    input_processors {
        auto_mouse_layer: auto_mouse_layer {
            compatible = "zmk,input-processor-temp-layer";
            #input-processor-cells = <2>;
            require-prior-idle-ms = <500>;  // Require 500ms idle before activation
            excluded-positions = <1 2 3 10 11 12 13 14>;   // Don't deactivate layer on combo keys
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
  &kp Q      &kp W         &kp E   &kp R   &kp T                           &kp Y                  &kp U          &kp I    &kp O      &kp P
  &kp A      &kp S         &kp D   &kp F   &kp G   &kp LC(TAB)             &kp RS(RG(S))          &kp H          &kp J    &kp K      &kp L          &mt RCTRL MINUS
  &kp Z      &kp X         &kp C   &kp V   &kp B   &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT ENTER  &kp N          &kp M    &kp COMMA  &kp PERIOD     &kp SLASH
  &kp LCTRL  &kp LEFT_GUI  &trans  &trans  &trans  &lt 3 LANG2             &lt 4 LANG1            &kp BACKSPACE  &kp DEL  &kp RCTRL  &kp RIGHT_ALT  &kp ESCAPE
            >;
        };

        mouse {
            bindings = <
  &trans  &trans  &mkp MB3  &trans    &trans            &trans  &trans  &trans  &trans  &trans
  &trans  &mo 2   &mkp MB2  &mkp MB1  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans    &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans    &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
  &trans    &kp LA(LEFT_ARROW)  &kp UP_ARROW    &kp LA(RIGHT_ARROW)  &trans                  &trans       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
  &kp HOME  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END  &trans         &trans       &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
  &trans    &trans              &trans          &trans               &trans   &trans         &trans       &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
  &mo 6     &trans              &trans          &trans               &trans   &lt 5 LANG2    &lt 5 LANG1  &trans        &trans        &kp NUMBER_0  &kp PERIOD    &trans
            >;
        };

        symbol {
            bindings = <
  &trans     &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE             &trans  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &trans
  &kp TILDE  &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &trans    &trans  &kp SLASH         &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp MINUS
  &trans     &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE          &trans    &trans  &kp ASTERISK      &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp BACKSLASH
  &trans     &trans         &trans                &trans                 &trans             &trans    &trans  &trans            &trans            &trans            &trans            &trans
            >;
        };

        function {
            bindings = <
  &trans  &kp LS(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LG(LS(RIGHT_ARROW))  &trans            &trans  &kp F7  &kp F8  &kp F9  &kp F10
  &trans  &kp LG(LEFT_ARROW)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)      &trans  &trans    &trans  &trans  &kp F4  &kp F5  &kp F6   &kp F11
  &trans  &trans                  &trans              &trans                   &trans  &trans    &trans  &trans  &kp F1  &kp F2  &kp F3   &kp F12
  &trans  &trans                  &trans              &trans                   &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        set {
            bindings = <
  &trans  &trans        &trans        &trans        &trans                    &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 4  &trans        &trans        &trans  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 0  &trans        &trans        &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
