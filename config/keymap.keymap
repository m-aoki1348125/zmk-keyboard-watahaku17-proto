#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <layout_shift.dtsi>

// Layout Shift Overlay - Replaces &kp behavior with custom implementation
// Copied inline from layout_shift_kp_override.dtsi to avoid Keymap Editor reordering issues
/ {
    behaviors {
        // Keep the original key_press behavior for ZMK core components
        original_key_press: original_key_press {
            compatible = "zmk,behavior-key-press";
            #binding-cells = <1>;
            label = "KEY_PRESS";
        };

        // Override the existing &kp behavior to use our custom implementation
        kp: key_press {
            compatible = "zmk,behavior-layout-shift-key-press";
            #binding-cells = <1>;
            label = "LAYOUT_SHIFT_KEY_PRESS";
        };
    };

    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <0 15 34>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        ctl_f {
            bindings = <&kp LC(F)>;
            key-positions = <18 19>;
        };

        ctl_shift_f {
            bindings = <&kp LC(LS(F))>;
            key-positions = <6 7>;
        };

        ctl_z {
            bindings = <&kp LC(Z)>;
            key-positions = <30 31>;
        };

        ctl_y {
            bindings = <&kp LC(Y)>;
            key-positions = <31 32>;
        };

        win_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <1 2>;
        };
    };

    // Auto mouse layer configuration

    input_processors {
        auto_mouse_layer: auto_mouse_layer {
            compatible = "zmk,input-processor-temp-layer";
            #input-processor-cells = <2>;
            require-prior-idle-ms = <500>;  // Require 500ms idle before activation
            excluded-positions = <0 1 2 3 4 10 11 12 13 14>;   // Don't deactivate layer on combo keys
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer0 {
            display-name = "Base";
            bindings = <
  &kp Q         &kp W             &kp E   &kp R   &kp T                           &kp Y                  &kp U          &kp I    &kp O          &kp P
  &kp A         &kp S             &kp D   &kp F   &kp G   &kp ESCAPE              &kp RS(RG(S))          &kp H          &kp J    &kp K          &kp L                &mt RCTRL MINUS
  &kp Z         &kp X             &kp C   &kp V   &kp B   &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT ENTER  &kp N          &kp M    &kp COMMA      &kp PERIOD           &kp SLASH
  &kp LEFT_WIN  &kp LC(LEFT_GUI)  &trans  &trans  &trans  &lt 3 LANG2             &lt 4 LANG1            &kp BACKSPACE  &kp DEL  &kp RIGHT_ALT  &kp RC(RIGHT_SHIFT)  &kp RC(RA(RIGHT_SHIFT))
            >;
        };

        mouse {
            display-name = "Mouse";
            bindings = <
  &trans           &kp LA(LEFT_ARROW)  &mkp MB3  &kp LA(RIGHT_ARROW)  &kp LG(TAB)            &trans  &trans  &trans  &trans  &trans
  &kp LC(LS(TAB))  &mo 2               &mkp MB2  &mkp MB1             &kp LC(TAB)  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans           &trans              &trans    &trans               &trans       &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans           &trans              &trans    &trans               &trans       &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            display-name = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            display-name = "Number";
            bindings = <
  &kp LS(LEFT_ARROW)  &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT_ARROW)  &kp LS(RIGHT_ARROW)            &kp COLON    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
  &kp HOME            &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END              &trans    &trans       &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
  &kp LC(Z)           &kp LC(X)           &kp LC(C)       &kp LC(V)            &kp LC(Y)            &mo 6     &trans       &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
  &kp LC(S)           &kp LC(A)           &trans          &trans               &trans               &trans    &lt 5 LANG1  &trans        &trans        &kp NUMBER_0  &kp PERIOD    &trans
            >;
        };

        symbol {
            display-name = "Symbol";
            bindings = <
  &trans     &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE                  &trans  &kp AMPERSAND  &kp ASTERISK     &kp LEFT_PARENTHESIS  &trans
  &kp TILDE  &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &trans         &trans  &kp SLASH      &kp DOLLAR       &kp PERCENT           &kp CARET  &kp MINUS
  &trans     &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE          &trans         &trans  &kp ASTERISK   &kp EXCLAMATION  &kp AT_SIGN           &kp HASH   &kp BACKSLASH
  &trans     &trans         &trans                &trans                 &trans             &lt 5 LANG1    &trans  &trans         &trans           &trans                &trans     &trans
            >;
        };

        function {
            display-name = "Function";
            bindings = <
  &trans  &kp LS(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LG(LS(RIGHT_ARROW))  &trans            &trans  &kp F7  &kp F8  &kp F9  &kp F10
  &trans  &kp LG(LEFT_ARROW)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)      &trans  &trans    &trans  &trans  &kp F4  &kp F5  &kp F6   &kp F11
  &trans  &trans                  &trans              &trans                   &trans  &trans    &trans  &trans  &kp F1  &kp F2  &kp F3   &kp F12
  &trans  &trans                  &trans              &trans                   &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        set {
            display-name = "Settings";
            bindings = <
  &trans   &trans        &trans        &trans        &trans                    &trans  &trans  &trans  &trans  &trans
  &tog_ls  &bt BT_SEL 4  &trans        &trans        &trans  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
  &trans   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
  &trans   &bt BT_SEL 0  &trans        &trans        &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
